{
  "entities": {
    "InventoryItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "InventoryItem",
      "type": "object",
      "description": "Represents an item in the inventory.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the inventory item."
        },
        "address": {
          "type": "string",
          "description": "The storage address of the item."
        },
        "barcode": {
          "type": "string",
          "description": "The barcode of the item."
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of the item in stock."
        },
        "expirationDate": {
          "type": "string",
          "description": "The expiration date of the item (yyyymmdd).",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "address",
        "barcode",
        "quantity",
        "expirationDate"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}/inventoryItems/{itemId}",
        "definition": {
          "entityName": "InventoryItem",
          "schema": {
            "$ref": "#/backend/entities/InventoryItem"
          },
          "description": "Stores inventory items associated with a specific user. Each user has their own collection of inventory items. Path-based ownership ensures that only the authenticated user can access these items.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "itemId",
              "description": "The unique identifier of the inventory item."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to store inventory items, associating each item with the user who created it.  Each user will have their own collection of inventory items, ensuring data isolation and straightforward ownership. This design promotes Authorization Independence by eliminating the need for `get()` calls in security rules. The structure uses path-based ownership (`/users/{userId}/inventoryItems/{itemId}`), ensuring that only the authenticated user has access to their inventory items. This approach supports secure `list` operations (QAPs) because security rules can efficiently filter items based on the user ID in the path. Timestamps aren't explicitly part of the data structure, but Firestore automatically creates `createTime` and `updateTime` timestamps for each document, which can be leveraged if needed. No denormalization is needed because ownership is implicit in the path."
  }
}